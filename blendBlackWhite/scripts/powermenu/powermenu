#!/usr/bin/env bash

## Copyright (C) 2020-2024 Aditya Shakya <adi1090x@gmail.com>

# Debug: Print start message
echo "Script started"

# Import Current Theme
STYLE="default"
RASI="~/.config/polybar/scripts/powermenu/powermenu.rasi"
CNFR="~/.config/polybar/scripts/powermenu/confirm.rasi"

# Theme Elements
prompt="Hostname: (`echo hostname`)"
mesg="Uptime: `uptime -p | sed -e 's/up //g'`"

# Options
layout=$(grep 'USE_ICON' "$RASI" | cut -d'=' -f2)
if [[ "$layout" == 'NO' ]]; then
    option_1=" Lock"
    option_2="󰍃 Logout"
    option_3="󱎫 Suspend"
    option_4="󰒲 Hibernate"
    option_5="󰑓 Reboot"
    option_6="⏻ Shutdown"
else
    option_1=" "
    option_2="󰍃 "
    option_3="󱎫 "
    option_4="󰒲 "
    option_5="󰑓 "
    option_6="⏻ "
fi

cnflayout=$(grep 'USE_ICON' "$CNFR" | cut -d'=' -f2)
if [[ "$cnflayout" == 'NO' ]]; then
    yes=' Yes'
    no=' No'
else
    yes=' '
    no=' '
fi

# Debug: Print options and theme layout
echo "Option 1: $option_1"
echo "Option 2: $option_2"
echo "Option 3: $option_3"
echo "Option 4: $option_4"
echo "Option 5: $option_5"
echo "Option 6: $option_6"
echo "Confirm Yes: $yes"
echo "Confirm No: $no"

# Rofi CMD
rofi_cmd() {
    rofi -dmenu \
        -p "$prompt" \
        -mesg "$mesg" \
        -markup-rows \
        -theme "${RASI}"
}

# Pass variables to rofi dmenu
run_rofi() {
    echo -e "$option_1\n$option_2\n$option_3\n$option_4\n$option_5\n$option_6" | rofi_cmd
}

# Debug: Print chosen option
echo "Running rofi..."
chosen="$(run_rofi)"
echo "Chosen option: $chosen"

# Confirmation CMD
confirm_cmd() {
    rofi -dmenu \
        -p 'Confirmation' \
        -mesg 'Are you Sure?' \
        -theme "${CNFR}"
}

# Ask for confirmation
confirm_exit() {
    echo -e "$yes\n$no" | confirm_cmd
}

# Debug: Print confirmation selection
echo "Asking for confirmation..."
confirm_run() {
    selected="$(confirm_exit)"
    echo "Confirmation selected: $selected"
    if [[ "$selected" == "$yes" ]]; then
        ${1} && ${2} && ${3}
    else
        exit
    fi
}

# Execute Command
run_cmd() {
    if [[ "$1" == '--opt1' ]]; then
        betterlockscreen --lock
    elif [[ "$1" == '--opt2' ]]; then
        confirm_run 'bspc quit'
    elif [[ "$1" == '--opt3' ]]; then
        confirm_run 'pulsemixer --mute' 'betterlockscreen --suspend'
    elif [[ "$1" == '--opt4' ]]; then
        confirm_run 'systemctl hibernate'
    elif [[ "$1" == '--opt5' ]]; then
        confirm_run 'systemctl reboot'
    elif [[ "$1" == '--opt6' ]]; then
        confirm_run 'systemctl poweroff'
    fi
}

# Debug: Print chosen action
echo "Executing chosen command..."
case ${chosen} in
    "$option_1")
        run_cmd --opt1
        ;;
    "$option_2")
        run_cmd --opt2
        ;;
    "$option_3")
        run_cmd --opt3
        ;;
    "$option_4")
        run_cmd --opt4
        ;;
    "$option_5")
        run_cmd --opt5
        ;;
    "$option_6")
        run_cmd --opt6
        ;;
    *)
        echo "No valid option selected"
        ;;
esac

# Debug: Print end message
echo "Script ended"
